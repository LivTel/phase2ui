/*
 * NewTimingConstraintDialog.java
 *
 * Created on April 30, 2009, 10:38 AM
 */
package ngat.oss.client.gui.dialog;

import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.xml.stream.events.Comment;
import ngat.oss.client.Phase2ModelClient;
import ngat.oss.client.gui.panel.SemesterAccountPanel;
import ngat.oss.client.gui.reference.Session;
import ngat.oss.client.gui.wrapper.TransactionWrapper;
import ngat.oss.exception.Phase2Exception;
import ngat.phase2.IAccount;
import ngat.phase2.ISemester;

/**
 *
 * @author  nrc
 */
public class NewTransactionDialog extends javax.swing.JDialog implements ActionListener {

    private ISemester semester;
    private IAccount account;
    private int transactionType;    //one of TransactionWrapper.INCREMENT | DECREMENT
    private int accountColumn;    //one of TransactionWrapper.ALLOCATED | CONSUMED

    private TransactionWrapper transactionWrapper = null;
    
    public NewTransactionDialog(boolean modal, ISemester semester, IAccount account, int accountColumn, int transactionType) {
        this.setModal(modal);

        this.semester = semester;
        this.account = account;
        this.transactionType = transactionType; //whether it's an increment or a decrement (dependant upon the button pressed in the UI).
        this.accountColumn = accountColumn; //allocated or consumed
        
        initComponents();
        initComponents2();
        centerFrame();
        addListeners();
    }

    private void initComponents2() {
        jtfSemester.setText(semester.getName());
        
        String accountTypeName = "UNKNOWN";
        switch(accountColumn) {
            case TransactionWrapper.ALLOCATED_BALANCE_TYPE:
                accountTypeName = "ALLOCATED";
                break;
            case TransactionWrapper.CONSUMED_BALANCE_TYPE:
                accountTypeName = "CONSUMED";
                break;
        }

        jtfAccountType.setText(accountTypeName);
        
        String transactionTypeName = "UNKNOWN";
        switch(transactionType) {
            case TransactionWrapper.INCREMENT:
                transactionTypeName = "INCREMENT";
                break;
            case TransactionWrapper.DECREMENT:
                transactionTypeName = "DECREMENT";
                break;
        }
        
        jtfTransactionType.setText(transactionTypeName);

        jtfClientRef.setText(Session.getInstance().getUser().getName());
    }

    public TransactionWrapper getTransactionWrapper() {
        return transactionWrapper;
    }

    private TransactionWrapper createTransactionWrapper() {
        double amount;
        try {
            amount = Double.parseDouble(jtfAmount.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter an amount as a valid number");
            return null;
        }

        String comment = (String) jcbComment.getSelectedItem();
        String clientRef = jtfClientRef.getText();
        TransactionWrapper transactionWrapper = new TransactionWrapper(account.getID(), transactionType, accountColumn, amount, comment, clientRef);
        return transactionWrapper;
    }

    private void centerFrame() {
        Dimension screenDimension = Toolkit.getDefaultToolkit().getScreenSize();
        double hd = screenDimension.getHeight();
        double wd = screenDimension.getWidth();

        double yd = (hd - this.getBounds().getHeight()) / 2;
        double xd = (wd - this.getBounds().getWidth()) / 2;

        final int x = (int) xd;
        final int y = (int) yd;

        EventQueue.invokeLater(
                new Runnable() {

                    public void run() {
                        NewTransactionDialog.this.setLocation(x, y);
                    }
                });
    }

    private void addListeners() {
        this.addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosing(java.awt.event.WindowEvent e) {
                NewTransactionDialog.this.setVisible(false);
                NewTransactionDialog.this.dispose();
            }
        });
    }

    public void actionPerformed(ActionEvent actionEvent) {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfTransactionType = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfClientRef = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfAmount = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcbComment = new javax.swing.JComboBox();
        jbtnSubmit = new javax.swing.JButton();
        jbtnCancel = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jtfSemester = new javax.swing.JTextField();
        jtfAccountType = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Transaction");

        jLabel1.setText("Transaction type:");

        jtfTransactionType.setEditable(false);

        jLabel2.setText("Amount:");

        jtfClientRef.setEditable(false);

        jLabel3.setText("Client Reference:");

        jLabel4.setText("Comment:");

        jcbComment.setEditable(true);
        jcbComment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Initial Allocation", "Correction" }));

        jbtnSubmit.setForeground(new java.awt.Color(255, 0, 0));
        jbtnSubmit.setText("Create");
        jbtnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSubmitActionPerformed(evt);
            }
        });

        jbtnCancel.setText("Cancel");
        jbtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelActionPerformed(evt);
            }
        });

        jLabel5.setText("Semester:");

        jtfSemester.setEditable(false);

        jtfAccountType.setEditable(false);

        jLabel7.setText("Type:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(layout.createSequentialGroup()
                            .add(48, 48, 48)
                            .add(jLabel5)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(jtfSemester))
                        .add(layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(layout.createSequentialGroup()
                                    .add(48, 48, 48)
                                    .add(jLabel7))
                                .add(layout.createSequentialGroup()
                                    .add(44, 44, 44)
                                    .add(jLabel4))
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel3)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel2)))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jtfClientRef)
                                .add(jtfTransactionType)
                                .add(jcbComment, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jtfAccountType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 277, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jtfAmount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(layout.createSequentialGroup()
                        .add(95, 95, 95)
                        .add(jbtnSubmit)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbtnCancel)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jtfSemester, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(jtfAccountType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jtfTransactionType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jtfClientRef, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfAmount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jcbComment, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 7, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(jbtnSubmit)
                    .add(jbtnCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSubmitActionPerformed
        transactionWrapper = createTransactionWrapper();
        if (transactionWrapper != null) {
            this.setVisible(false);
            this.dispose();
        }
    }//GEN-LAST:event_jbtnSubmitActionPerformed

    private void jbtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelActionPerformed
        transactionWrapper = null;
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jbtnCancelActionPerformed

    
private boolean groupExists(String groupName, long proposalId) throws Phase2Exception {
    boolean groupExists = Phase2ModelClient.getInstance().groupExists(groupName, proposalId);
    return groupExists;
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton jbtnCancel;
    private javax.swing.JButton jbtnSubmit;
    private javax.swing.JComboBox jcbComment;
    private javax.swing.JTextField jtfAccountType;
    private javax.swing.JTextField jtfAmount;
    private javax.swing.JTextField jtfClientRef;
    private javax.swing.JTextField jtfSemester;
    private javax.swing.JTextField jtfTransactionType;
    // End of variables declaration//GEN-END:variables
}
