/*
 *
 * Created on April 17, 2009, 2:07 PM
 */

package ngat.oss.client.gui.panel.timingConstraint;

import ngat.oss.client.gui.panel.interfaces.ITimingConstraintPanel;
import ngat.phase2.ITimingConstraint;
import ngat.phase2.XFixedTimingConstraint;

/**
 *
 * @author  nrc
 */
public class FixedTimingConstraintEditorPanel extends javax.swing.JPanel implements ITimingConstraintPanel {

    private XFixedTimingConstraint fixedTimingConstraint;
    private boolean enabled;
    private boolean isNewTimingConstraint;

    /** Creates new form  */
    public FixedTimingConstraintEditorPanel(XFixedTimingConstraint fixedTimingConstraint, boolean isNewTimingConstraint) {
        this.fixedTimingConstraint = fixedTimingConstraint;
        this.isNewTimingConstraint = isNewTimingConstraint;
        initComponents();
        populateComponents();
    }

    private void populateComponents() {
        dtepFixedTime.setTime(fixedTimingConstraint.getFixedTime(), isNewTimingConstraint);
        msepSlack.setTime(fixedTimingConstraint.getSlack());
    }
    
    public ITimingConstraint getTimingConstraint() {

        try {
            long fixedTime = dtepFixedTime.getTime();
            long slack = msepSlack.getTime();

            fixedTimingConstraint.setFixedTime(fixedTime);
            fixedTimingConstraint.setSlack(slack);

            return fixedTimingConstraint;
        } catch (Exception e) {
            return null;
        }
    }
    
    public boolean containsValidTimingConstraint() {
        try {
            long fixedTime = dtepFixedTime.getTime();
            long slack = msepSlack.getTime();

            fixedTimingConstraint.setFixedTime(fixedTime);
            fixedTimingConstraint.setSlack(slack);

            return true;
        } catch (Exception e) {
            return false;
        }
    }
    
    public boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
        
        dtepFixedTime.setEnabled(enabled);
        msepSlack.setEnabled(enabled);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dtepFixedTime = new ngat.beans.guibeans.DateTimeEditorPanel();
        msepSlack = new ngat.beans.guibeans.MillisecondEditorPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtpHelpPane = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        dtepFixedTime.setTitle("Fixed Time");

        msepSlack.setTitle("Slack");

        jtpHelpPane.setBorder(null);
        jtpHelpPane.setEditable(false);
        jtpHelpPane.setText("The Slack defines the total time interval (split half before and half after the Fixed Time) that the group may start in.\n\nFor example, a Fixed Time of 22:00 with a Slack of 10 minutes would start somewhere between 21:55 and 22:05.\n\nBeware of setting too small a value for Slack (< 10 minutes) as misestimation of the execution time of a preceeding observation may cause the fixed observation to be missed.\n");
        jScrollPane1.setViewportView(jtpHelpPane);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel1.setText("Fixed Timing Constraint");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(dtepFixedTime, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, msepSlack, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dtepFixedTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(msepSlack, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ngat.beans.guibeans.DateTimeEditorPanel dtepFixedTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jtpHelpPane;
    private ngat.beans.guibeans.MillisecondEditorPanel msepSlack;
    // End of variables declaration//GEN-END:variables

}
