/*
 * SeeingConstraintPanel.java
 *
 * Created on 15 January 2008, 14:38
 */
package ngat.oss.client.gui.panel.observingConstraint;

import ngat.oss.client.gui.panel.interfaces.IObservingConstraintPanel;
import ngat.phase2.IObservingConstraint;
import ngat.phase2.XSkyBrightnessConstraint;

/**
 *
 * @author  nrc
 */
public class SkyBrightnessObservingConstraintPanel extends javax.swing.JPanel implements IObservingConstraintPanel {

    private boolean enabled;
    private boolean delete;

    /** Sky brightness category, one of:
    IObservingConstraint.DAYTIME
    IObservingConstraint.MAG_10
    IObservingConstraint.MAG_6:
    IObservingConstraint.MAG_4:
    IObservingConstraint.MAG_2:
    IObservingConstraint.MAG_1P5:
    IObservingConstraint.MAG_0P75:
    IObservingConstraint.DARK:
     */

    /** Creates new form SeeingConstraintPanel */
    public SkyBrightnessObservingConstraintPanel(XSkyBrightnessConstraint skyBrightnessConstraint, boolean newObsConstraint) {
        initComponents();
        setValues(skyBrightnessConstraint, newObsConstraint);
    }

    private void setValues(XSkyBrightnessConstraint skyBrightnessConstraint, boolean newObsConstraint) {
        jbtnDelete.setVisible(false);

        switch (skyBrightnessConstraint.getSkyBrightnessCategory()) {
            case IObservingConstraint.DAYTIME:
                jcbSkyBrightness.setSelectedIndex(0);
                break;
            case IObservingConstraint.MAG_10:
                jcbSkyBrightness.setSelectedIndex(1);
                break;
            case IObservingConstraint.MAG_6:
                jcbSkyBrightness.setSelectedIndex(2);
                break;
            case IObservingConstraint.MAG_4:
                jcbSkyBrightness.setSelectedIndex(3);
                break;
            case IObservingConstraint.MAG_2:
                jcbSkyBrightness.setSelectedIndex(4);
                break;
            case IObservingConstraint.MAG_1P5:
                jcbSkyBrightness.setSelectedIndex(5);
                break;
            case IObservingConstraint.MAG_0P75:
                jcbSkyBrightness.setSelectedIndex(6);
                break;
            case IObservingConstraint.DARK:
                jcbSkyBrightness.setSelectedIndex(7);
                break;
        }
    }

    public XSkyBrightnessConstraint getObservingConstraint() {

        int category = 0;
        switch (jcbSkyBrightness.getSelectedIndex()) {
            case 0:
                category = IObservingConstraint.DAYTIME;
                break;
            case 1:
                category = IObservingConstraint.MAG_10;
                break;
            case 2:
                category = IObservingConstraint.MAG_6;
                break;
            case 3:
                category = IObservingConstraint.MAG_4;
                break;
            case 4:
                category = IObservingConstraint.MAG_2;
                break;
            case 5:
                category = IObservingConstraint.MAG_1P5;
                break;
            case 6:
                category = IObservingConstraint.MAG_0P75;
                break;
            case 7:
                category = IObservingConstraint.DARK;
                break;
        }
        return new XSkyBrightnessConstraint(category);
    }

    public boolean containsValidObservingConstraint() {
        return true;
    }

    public boolean isEditable() {
        return enabled;
    }

    public void setEditable(boolean enabled) {
        this.enabled = enabled;

        jbtnDelete.setVisible(enabled);
        jcbSkyBrightness.setEnabled(enabled);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jcbSkyBrightness = new javax.swing.JComboBox();
        jbtnDelete = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sky Brightness Constraint", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 10))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 10));
        jLabel2.setText("MAXIMUM SKY BRIGHTNESS=");

        jcbSkyBrightness.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jcbSkyBrightness.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DAYTIME", "DARK + MAGNITUDE 10", "DARK + MAGNITUDE 6", "DARK + MAGNITUDE 4", "DARK + MAGNITUDE 2", "DARK + MAGNITUDE 1.5", "DARK + MAGNITUDE 0.75", "DARK" }));
        jcbSkyBrightness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSkyBrightnessActionPerformed(evt);
            }
        });

        jbtnDelete.setText("Click to delete");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jbtnDelete)
                    .add(layout.createSequentialGroup()
                        .add(jLabel2)
                        .add(2, 2, 2)
                        .add(jcbSkyBrightness, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jcbSkyBrightness, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jbtnDelete)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jcbSkyBrightnessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSkyBrightnessActionPerformed
}//GEN-LAST:event_jcbSkyBrightnessActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        if (!delete) {
            jbtnDelete.setText("Will be deleted, click to undelete");
            delete = true;
        } else {
            jbtnDelete.setText("Click to delete");
            delete = false;
        }
}//GEN-LAST:event_jbtnDeleteActionPerformed

    public boolean shouldBeDeleted() {
        return delete;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JComboBox jcbSkyBrightness;
    // End of variables declaration//GEN-END:variables
}
