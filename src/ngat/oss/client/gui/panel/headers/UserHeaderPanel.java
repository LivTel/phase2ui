/*
 * UserHeaderPanel.java
 *
 * Created on 05 December 2007, 10:16
 */
package ngat.oss.client.gui.panel.headers;

import ngat.oss.client.gui.panel.interfaces.IEditablePanel;
import java.awt.Desktop;
import java.net.URI;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import ngat.oss.client.AccessModelClient;
import ngat.oss.client.gui.control.AdditionDeletionController;
import ngat.oss.client.gui.frame.MainFrame;
import ngat.oss.client.gui.reference.Session;
import ngat.oss.client.gui.util.LimitedCharactersDocument;
import ngat.oss.exception.Phase2Exception;
import ngat.phase2.IUser;
import ngat.phase2.XUser;
import org.apache.log4j.Logger;

/**
 *
 * @author  nrc
 */
public class UserHeaderPanel extends javax.swing.JPanel implements IEditablePanel {

    static Logger logger = Logger.getLogger(UserHeaderPanel.class);

    private XUser user;
    private boolean enabled;
    
    /** Creates new form UserHeaderPanel */
    public UserHeaderPanel(IUser user) {
        this.user = (XUser)user;
        initComponents();
        populateComponents();
        setEnabled(false);
    }

    public boolean isBeingEdited() {
        return enabled;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfUserName = new javax.swing.JTextField();
        jtfFirstName = new javax.swing.JTextField();
        jtfLastName = new javax.swing.JTextField();
        jtfEmail = new javax.swing.JTextField();
        jpfPassword = new javax.swing.JPasswordField();
        jbtnEdit = new javax.swing.JButton();
        jbtnSubmit = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();
        jlblSU = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 10)); // NOI18N
        jLabel1.setText("USER");

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel13.setText("Email");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel4.setText("First Name");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel5.setText("Last Name");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel2.setText("User Name");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel3.setText("Password");

        jtfUserName.setEditable(false);
        jtfUserName.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jtfUserName.setEnabled(false);

        jtfFirstName.setEditable(false);
        jtfFirstName.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N

        jtfLastName.setEditable(false);
        jtfLastName.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N

        jtfEmail.setEditable(false);
        jtfEmail.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N

        jpfPassword.setEditable(false);

        jbtnEdit.setText("Edit");
        jbtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditActionPerformed(evt);
            }
        });

        jbtnSubmit.setForeground(new java.awt.Color(255, 0, 0));
        jbtnSubmit.setText("Submit");
        jbtnSubmit.setEnabled(false);
        jbtnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSubmitActionPerformed(evt);
            }
        });

        jbtnDelete.setText("Delete");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });

        jlblSU.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jlblSU.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblSU.setText("SUPER USER");

        jLabel6.setText("How we use your personal Data:");

        jLabel7.setText("LT Privacy Policy: ");

        jLabel8.setText("<html><a href=\"http://telescope.livjm.ac.uk/Privacy/\">http://telescope.livjm.ac.uk/Privacy/</a></html>");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                privacyURLClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5)
                            .add(jLabel4)
                            .add(jLabel2)
                            .add(jLabel3))
                        .add(23, 23, 23)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jpfPassword)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jtfUserName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                            .add(jtfLastName)
                            .add(jtfFirstName)
                            .add(jtfEmail)
                            .add(layout.createSequentialGroup()
                                .add(12, 12, 12)
                                .add(jlblSU)))
                        .add(36, 36, 36)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jbtnDelete, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .add(jbtnSubmit, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jbtnEdit, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                        .add(338, 338, 338))
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(302, 302, 302))))
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel13)
                    .add(layout.createSequentialGroup()
                        .add(jLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel6))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {jtfEmail, jtfFirstName, jtfLastName, jtfUserName}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(32, 32, 32)
                        .add(jbtnEdit)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbtnSubmit)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbtnDelete))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(jtfUserName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(jpfPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel4)
                            .add(jtfFirstName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel5)
                            .add(jtfLastName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel13)
                            .add(jtfEmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jlblSU, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(232, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void jbtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditActionPerformed

    MainFrame.getInstance().enableTrees(false);
    MainFrame.getInstance().displayMessage("Editing User");

    if (Session.getInstance().getUser().isSuperUser()) {
        setEnabled(true, true);
        jtfUserName.requestFocus();
        return;
    }
    
    JPasswordField jPasswordField = new JPasswordField();
    Object[] message = {"Please enter your current password.", jPasswordField};
    int response = JOptionPane.showConfirmDialog(null, message, "Confirm Password", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
    String passwordSupplied = "";
    if (response == JOptionPane.OK_OPTION) {
        passwordSupplied = new String(jPasswordField.getPassword());
    } else {
        setEnabled(false, false);
        MainFrame.getInstance().enableTrees(true);
        return;
    }
    if (!passwordSupplied.equals(user.getPassword())) {
        JOptionPane.showMessageDialog(this, "The password supplied was incorrect");
        setEnabled(false, false);
        MainFrame.getInstance().enableTrees(true);
    } else {
        setEnabled(true, false);
        jpfPassword.requestFocus();
    }
    
}//GEN-LAST:event_jbtnEditActionPerformed

private void jbtnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSubmitActionPerformed
    MainFrame.getInstance().displayMessage("Editing Submitted.");

    char[] password = jpfPassword.getPassword();
    //validate the fields before allowing submission
    /*
    if (password.length < 8 ) {
        JOptionPane.showMessageDialog(this, "Please enter a password at least 8 characters long, ");
        return;
    }
    */
    String userName = jtfUserName.getText();
    /*
    if (userName.length() < 8) {
        JOptionPane.showMessageDialog(this, "Please enter a username at least 8 characters long,");
        return;
    }
    */
    
    AccessModelClient accessModelClient = AccessModelClient.getInstance();
    boolean userExists;
    try {
        IUser foundUser = accessModelClient.findUser(userName);
        if (foundUser.getID() != user.getID()) {
            JOptionPane.showMessageDialog(this, "A different user with that name already exists, please enter a different username.");
            return;
        }
    } catch (Phase2Exception ex) {
        ex.printStackTrace();
        logger.error(ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
        JOptionPane.showMessageDialog(this, "The user was NOT added");
        MainFrame.getInstance().enableTrees(true);
        return;
    }

    setEnabled(false, false);
    String formPassword = new String(jpfPassword.getPassword());
    formPassword.trim();
    //String address = jtfAddress.getText().trim();
    //String city = jtfCity.getText().trim();
    //String country = jtfCountry.getText().trim();
    //String department = jtfDepartment.getText().trim();
    String email = jtfEmail.getText().trim();
    //String fax = jtfFax.getText().trim();
    String firstName = jtfFirstName.getText().trim();
    String lastName = jtfLastName.getText().trim();
    //String org = jtfOrganisation.getText().trim();
    //String postcode = jtfPostcode.getText().trim();
    //String region = jtfRegion.getText().trim();
    //String phone = jtfTelephone.getText().trim();

    String originalPassword = user.getPassword();

    //get user to confirm the altered password if it altered
    if (!formPassword.equals(user.getPassword())) {

        JPasswordField jPasswordField = new JPasswordField();
        Object[] message = {"Please re-enter the new password.", jPasswordField};
        int response = JOptionPane.showConfirmDialog(null, message, "Confirm Password", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        String passwordSupplied = "";
        if (response == JOptionPane.OK_OPTION) {
            passwordSupplied = new String(jPasswordField.getPassword());
        } else {
            return;
        }
        if (!passwordSupplied.equals(formPassword)) {
            JOptionPane.showMessageDialog(this, "Passwords do not match, update failed.");
            return;
        }
    }

    user.setPassword(formPassword);
    user.setAddress("");
    user.setCity("");
    user.setCountry("");
    user.setDepartment("");
    user.setEmail(email);
    user.setFax("");
    user.setFirstName(firstName);
    user.setLastName(lastName);
    user.setOrganization("");
    user.setPostalCode("");
    user.setRegion("");
    user.setTelephone("");

    try {
        accessModelClient.updateUser(user);
    } catch (Phase2Exception ex) {
        ex.printStackTrace();
        logger.error(ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
        JOptionPane.showMessageDialog(this, "The user data was NOT updated");
        MainFrame.getInstance().enableTrees(true);
        return;
    }
    JOptionPane.showMessageDialog(this, "The user data has been successfully updated");

    MainFrame.getInstance().enableTrees(true);
    MainFrame.getInstance().reloadSelectedNodeParent();
}//GEN-LAST:event_jbtnSubmitActionPerformed

private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
    AdditionDeletionController.getInstance().deleteUser(user);
}//GEN-LAST:event_jbtnDeleteActionPerformed

    private void privacyURLClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_privacyURLClicked
        if(Desktop.isDesktopSupported())
        {
            if (Desktop.getDesktop().isSupported(Desktop.Action.BROWSE))  
            {
                try
                {
                    Desktop.getDesktop().browse(new URI("http://telescope.livjm.ac.uk/Privacy/"));
                }   
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(this, "Failed to display the privacy URL.");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Browsing URLs are not supported.");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Displaying the privacy URL is not supported.");
        }
    }//GEN-LAST:event_privacyURLClicked
 
private void setEnabled(boolean editable, boolean usernameEditable) {
    
    jtfUserName.setEditable(usernameEditable);
    
    jpfPassword.setEditable(editable);
    //jtfAddress.setEditable(editable);
    //jtfCity.setEditable(editable);
    //jtfCountry.setEditable(editable);
    //jtfDepartment.setEditable(editable);
    jtfEmail.setEditable(editable);
    //jtfFax.setEditable(editable);
    jtfFirstName.setEditable(editable);
    jtfLastName.setEditable(editable);
    //jtfOrganisation.setEditable(editable);
    //jtfPostcode.setEditable(editable);
    //jtfRegion.setEditable(editable);
    //jtfTelephone.setEditable(editable);
    jtfUserName.setEditable(editable);
    
    jbtnSubmit.setEnabled(editable);
    jbtnEdit.setEnabled(!editable);
}

    private void populateComponents() {

        jtfUserName.setDocument(new LimitedCharactersDocument(LimitedCharactersDocument.STRICT_LIMITATION));
        
        jbtnSubmit.setFocusable(false);
        jbtnEdit.setFocusable(false);
        
        jpfPassword.setText(user.getPassword());
        //jtfAddress.setText(user.getAddress());
        //jtfCity.setText(user.getCity());
        //jtfCountry.setText(user.getCountry());
        //jtfDepartment.setText(user.getDepartment());
        jtfEmail.setText(user.getEmail());
        //jtfFax.setText(user.getFax());
        jtfFirstName.setText(user.getFirstName());
        jtfLastName.setText(user.getLastName());
        //jtfOrganisation.setText(user.getOrganization());
        //jtfPostcode.setText(user.getPostalCode());
        //jtfRegion.setText(user.getRegion());
        //jtfTelephone.setText(user.getTelephone());
        jtfUserName.setText(user.getName());

        //only show delete button if the logged in user is a super user
        jbtnDelete.setVisible(Session.getInstance().getUser().isSuperUser());
        
        jlblSU.setVisible(user.isSuperUser());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnEdit;
    private javax.swing.JButton jbtnSubmit;
    private javax.swing.JLabel jlblSU;
    private javax.swing.JPasswordField jpfPassword;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfFirstName;
    private javax.swing.JTextField jtfLastName;
    private javax.swing.JTextField jtfUserName;
    // End of variables declaration//GEN-END:variables
    
}
