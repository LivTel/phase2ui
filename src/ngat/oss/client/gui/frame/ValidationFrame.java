/*
 * LoginFrame.java
 *
 * Created on 19 November 2007, 12:26
 */
package ngat.oss.client.gui.frame;

import javax.swing.JOptionPane;
import ngat.oss.client.gui.util.FrameCenterer;
import ngat.oss.client.gui.util.validation.GroupValidator;
import ngat.oss.client.gui.util.validation.ProposalValidator;
import ngat.oss.client.gui.util.validation.SequenceValidator;
import ngat.oss.client.gui.util.validation.ValidationProcess;
import ngat.oss.client.gui.wrapper.ValidationResults;
import ngat.oss.exception.Phase2Exception;
import ngat.phase2.IGroup;
import ngat.phase2.IPhase2Identity;
import ngat.phase2.IProposal;
import ngat.phase2.ISequenceComponent;
import org.apache.log4j.Logger;

/**
 *
 * @author nrc
 */
public class ValidationFrame extends javax.swing.JFrame {

    static Logger logger = Logger.getLogger(ValidationFrame.class);

    private boolean isFirstLine = true;
    //private IPhase2Identity phase2Object;
    ISequenceComponent observationSequence;

    /**
     * Creates new form LoginFrame
     */
    public ValidationFrame(IPhase2Identity phase2Object) {

        initComponents();
        populateComponents(phase2Object);
        addListeners();
        new FrameCenterer(this).start();
        //ValidationProcess validationProcess = new ValidationProcess(phase2Object);

        ValidationResults validationResults;

        try {
            if (phase2Object instanceof IProposal) {
                ProposalValidator proposalValidator = new ProposalValidator((IProposal) phase2Object);
                //want to validate the whole of the proposal (header and sub groups)
                validationResults = proposalValidator.getValidationResult(true);

            } else if (phase2Object instanceof IGroup) {
                GroupValidator groupValidator = new GroupValidator((IGroup) phase2Object);
                //want to validate the group (proposal header and sub groups)
                validationResults = groupValidator.getValidationResults(true, true);

            } else {
                throw new Phase2Exception("Attempted validation of non IPhase2Identity object in " + this.getClass());
            }
            
            jtpMessages.setText(validationResults.getValidationResultsAsString());
            jlblFailed.setVisible(validationResults.getFailureCount() > 0);

        } catch (Phase2Exception ex) {
            ex.printStackTrace();
            logger.error(ex);
            JOptionPane.showMessageDialog(this, ex);
        }
    }

    public ValidationFrame(IGroup group, ISequenceComponent sequence) {

        initComponents();
        populateComponents(sequence);
        addListeners();
        new FrameCenterer(this).start();
        //ValidationProcess validationProcess = new ValidationProcess(sequence);

        try {
            SequenceValidator sequenceValidator = new SequenceValidator(sequence, group);
            //want to validate the sequence, the header of the group and the header of the proposal
            ValidationResults validationResults = sequenceValidator.getValidationResults(true, true);
            jtpMessages.setText(validationResults.getValidationResultsAsString());
            jlblFailed.setVisible(validationResults.getFailureCount() > 0);

        } catch (Phase2Exception ex) {
            ex.printStackTrace();
            logger.error(ex);
            JOptionPane.showMessageDialog(this, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtpMessages = new javax.swing.JTextPane();
        jlblFailed = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Observation Sequence Editing");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                WindowClosing(evt);
            }
        });

        jbtnClose.setText("Close");
        jbtnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCloseActionPerformed(evt);
            }
        });

        jtpMessages.setEditable(false);
        jScrollPane1.setViewportView(jtpMessages);

        jlblFailed.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jlblFailed.setForeground(new java.awt.Color(255, 0, 0));
        jlblFailed.setText("FAILED");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jbtnClose)
                        .add(198, 198, 198)
                        .add(jlblFailed)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jbtnClose)
                    .add(jlblFailed))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void WindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_WindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_WindowClosing

    private void jbtnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCloseActionPerformed
        this.setVisible(false);
        this.dispose();
}//GEN-LAST:event_jbtnCloseActionPerformed

    private void addListeners() {
    }

    private void populateComponents(Object object) {

        if (object instanceof IProposal) {
            this.setTitle("Displaying validation results of  proposal : " + ((IProposal) object).getName());
        } else if (object instanceof IGroup) {
            this.setTitle("Displaying validation results of  proposal : " + ((IGroup) object).getName());
        } else if (object instanceof ISequenceComponent) {
            this.setTitle("Displaying validation results of observation sequence in builder");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnClose;
    private javax.swing.JLabel jlblFailed;
    private javax.swing.JTextPane jtpMessages;
    // End of variables declaration//GEN-END:variables

}
